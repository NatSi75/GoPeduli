plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.GoPeduli.GoPeduli"
    compileSdk = 35
    ndkVersion = "26.1.10909125"

      applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def newName = "GoPeduli.apk"
            // You can customize the name as you like.
            // Examples:
            // def newName = "MyApp-${variant.buildType.name}.apk" // MyApp-release.apk or MyApp-debug.apk
            // def newName = "MyApp-${new Date().format('yyyyMMdd_HHmm')}.apk" // MyApp-20250613_1230.apk

            if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                output.outputFileName = newName
            }
        }
    }
    
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.GoPeduli.GoPeduli"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
